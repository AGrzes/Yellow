type: SiteModel
menu:
  - name: News
    view:
      type: DeclarativeView
      contents:
        - type: List
          list:
            selector: this.type == 'Change'
            order:
              field: date
              direction: descending
          style: plain
          item:
            type: Card
            contents:
              - type: Field
                field: date
                format: date
                slot: header
                dateFormat: 'DD.MM.YYYY'
              - type: Field
                field: description
                format: markdown
                slot: content 
  - name: Reference
    view:
      type: DeclarativeView
      contents: 
        - type: MasterDetail
          master:
            - type: TOC
              data:
                selector: this.type == 'Category' || this.type == 'Reference' || this.type == 'God'     
                order:
                  field: name
              item:
                type: DetailsLink
                label: 
                  field: name    
          detail:
            - type: Switch
              case:
                field: type
              when:
                Category:
                  type: Card
                  contents:
                    - type: Field
                      field: name
                      slot: header
                    - type: LinkList
                      data: 
                        constructor: this.children
                      label:
                        field: name                
                Reference:
                  type: Card
                  contents:
                    - type: Field
                      field: name
                      slot: header
                    - type: Field
                      field: description
                      format: markdown
                      slot: content 
                God:   
                  type: Card
                  contents:
                    - type: Field
                      field: name
                      slot: header
                    - type: Field
                      field: nicknames
                      slot: header    
                      hint:
                       - small                  
                    - type: Field
                      field: character
                      label: Character
                      slot: content 
                    - type: Field
                      field: domain
                      label: Domain
                      slot: content    
                    - type: Field
                      field: symbol
                      label: Symbol
                      slot: content                                                                 
                    - type: Field
                      field: description
                      format: markdown
                      slot: content                          
  - name: Characters
    view:
      type: DeclarativeView
      contents: 
        - type: MasterDetail
          master:
            - type: TOC
              data:
                selector: (this.type == 'Location'||this.type == 'Province'||this.type == 'Region') && !this.parent    
              children: this.children    
              item:
                type: DetailsLink
                label: 
                  field: name    
          detail:  
            - type: Field
              field: name
              slot: header       
              pattern: People of {{this}}   
            - type: List
              list:
                selector:  this.type == 'Character' && this.location == parent
              style: list
              item:
                type: ListItem
                contents:
                  - type: Field
                    field: name
                    slot: header
                  - type: Field
                    field: nicknames
                    slot: sub-header
                  - type: Field
                    field: description
                    format: markdown
                    slot: content  
              #TODO define character lists                          
  - name: Organization
    view:
      type: DeclarativeView
      contents: 
        - type: MasterDetail
          master:
            - type: TOC
              data:
                selector: this.type == 'Organization' && !this.parent    
                order:
                  field: name
              children: this.children    
              item:
                type: DetailsLink
                label: 
                  field: name    
          detail:
            type: Card
            contents:
              - type: Field
                field: name
                slot: header
              - type: Field
                field: description
                format: markdown
                slot: content             
              - type: LinkList
                data: 
                  constructor: this.children
                label:
                  field: name                
  - name: Locations
    view:
      type: DeclarativeView
      contents: 
        - type: MasterDetail
          master:
            - type: TOC
              data:
                selector: (this.type == 'Location'||this.type == 'County'||this.type == 'Province') && !this.parent    
                order:
                  field: name
              children: this.sublocations    
              item:
                type: DetailsLink
                label: 
                  field: name    
          detail:
            type: Card
            contents:
              - type: Field
                field: name
                slot: header
              - type: Field
                field: description
                format: markdown
                slot: content             
              - type: LinkList
                header: Sub-Locations
                data: 
                  constructor: this.sublocations
                label:
                  expression: "{{name}} : {{target}}" 
              - type: LinkList
                header: Neighbors
                data: 
                  constructor: this.neighbors
                label:
                  expression: "{{name}} : {{target}}"                          
  - name: Items
    view:
      type: DeclarativeView
      contents:
        - type: List
          list:
            selector: 
              type: TypeSelector
              selector: Item
          style: plain
          item:
            type: Card
            contents:
              - type: Field
                field: kind
                slot: header
              - type: Field
                field: name
                slot: header                
              - type: Field
                field: value
                slot: header   
                decoration: badge              
              - type: Field
                field: description
                format: markdown
                slot: content 
  - name: Sessions
    view:
      type: DeclarativeView
      contents:
        - type: List
          list:
            selector: this.type == 'Session'
            order:
              field: date  
          style: plain
          item:
            type: Card
            hint:
             - collapse
            contents:
              - type: Field
                field: date
                format: date
                dateFormat: 'DD.MM.YYYY'
                slot: header
              - type: Static
                html: " - "
                slot: header              
              - type: Field
                field: name
                slot: header                
              - type: Field
                field: xp
                pattern: '{{this}} XP'
                slot: header  
                decoration: badge 
                hint: 
                  - right             
              - type: Field
                field: description
                format: markdown
                slot: content 
